# CircleCI configuration file
version: 2.1
orbs:
  # Declare a dependency on the welcome-orb
  aws-cli: circleci/aws-cli@2.0.3
commands:
  # Exercise: Reusable Job Code
  print_pipeline_id:
    parameters:
      id: 
        type: string
    steps:
      - run: echo << parameters.id >>

  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}  
jobs:
  # Job one with a unique name
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
  configure_infrastructure:
    environment:
      - ANSIBLE_HOST_KEY_CHECKING: False  
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["1e:74:bd:bb:ed:27:79:f0:c8:40:72:c2:ab:6d:c6:a2"]
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add openssh && apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml -v    
workflows:
  # Name of workflow
  my_workflow:
    # List of jobs that will run
    jobs:
      - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_infrastructure