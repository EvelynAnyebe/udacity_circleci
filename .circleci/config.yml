# CircleCI configuration file
version: 2.1
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
commands:
  print_pipeline_id:
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
jobs:
  # Job one with a unique name
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "Say hello to YAML!"
  # Job two with a unique name
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "Say Worls to YAML!"
  print_env_var:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run:
          name: "echo EVELYN env var value that is part of our project"
          command: |
            echo $EVELYN_VAR
  save_hello_world_output:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run: echo "Hello World" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: cimg/base:2020.01
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  print_pipeline_id_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
        name: Create Cloudformation Stack
        command: |
          aws cloundformation deploy \
            --template-file template.yml \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-1
workflows:
  # Name of workflow
  welcome:
    # List of jobs that will run
    jobs:
      - welcome/run
      - print_hello
      - print_world
      - print_env_var
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
      - print_pipeline_id_job
      - create_infrastructure